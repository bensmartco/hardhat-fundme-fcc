{
  "address": "0xdFA4F527343b3886e02A3f9A7b0176703CF17950",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x495aeca491215c1b8685f616eaea652c574dc843e490024219108925a59feb47",
  "receipt": {
    "to": null,
    "from": "0x7Ae2df59A816Fb865f5546bD3aB20D8a516188ef",
    "contractAddress": "0xdFA4F527343b3886e02A3f9A7b0176703CF17950",
    "transactionIndex": 8,
    "gasUsed": "865302",
    "logsBloom": "0x
    "blockHash": "0xafc316e3063cd8e2c6b82f5335cec001f3a0a02e6be8de918722a9c215a586da",
    "transactionHash": "0x495aeca491215c1b8685f616eaea652c574dc843e490024219108925a59feb47",
    "logs": [],
    "blockNumber": 3609193,
    "cumulativeGasUsed": "2310454",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "6487fcfc72cc26c51e9414bb578b6152",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 private constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    // function getVersion() public view returns (uint256){\\n    //     // ETH/USD price feed address of Sepolia Network.\\n    //     AggregatorV3Interface s_priceFeedV = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n    //     return s_priceFeedV.version();\\n    // }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n}\\n\",\"keccak256\":\"0x21390d85da0bf8f1b75a73a3bdddcf17afbd73a9172be0f2d0f943669de2ac6d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    // function getPrice(\\n    //     AggregatorV3Interface priceFeed\\n    // ) internal view returns (uint256) {\\n    //     // Sepolia ETH / USD Address\\n    //     // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n    //     // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //     //     _priceFeed\\n    //     // );\\n    //     (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    //     // ETH/USD rate in 18 digit\\n    //     return uint256(answer * 10000000000);\\n    //     // or (Both will do the same thing)\\n    //     // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    // }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        uint256 ethPrice = uint256(answer * 10000000000);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x1fdea07427b60cb8d620c2c1e6c1ef97d5e259cefc36301d16b6ab0da1b77c18\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610fa9380380610fa983398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e44610165600039600081816101dd015261041f0152610e446000f3fe6080604052600436106100555760003560e01c80630343fb251461005a5780633a7b6c74146100975780633ccfd60b146100d4578063893d20e8146100eb5780639e87a5cd14610116578063b60d428814610141575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c919061077c565b61014b565b60405161008e91906107c2565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190610809565b610193565b6040516100cb9190610845565b60405180910390f35b3480156100e057600080fd5b506100e96101db565b005b3480156100f757600080fd5b5061010061041b565b60405161010d9190610845565b60405180910390f35b34801561012257600080fd5b5061012b610443565b60405161013891906108bf565b60405180910390f35b61014961046d565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106101a9576101a86108da565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610260576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561030b57600060018281548110610286576102856108da565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030390610938565b915050610263565b50600067ffffffffffffffff81111561032757610326610981565b5b6040519080825280602002602001820160405280156103555781602001602082028036833780820191505090505b506001908051906020019061036b929190610672565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610392906109e1565b60006040518083038185875af1925050503d80600081146103cf576040519150601f19603f3d011682016040523d82523d6000602084013e6103d4565b606091505b5050905080610418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040f90610a53565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104ac600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a790919063ffffffff16565b10156104ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e490610abf565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053b9190610adf565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f057600080fd5b505afa158015610604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106289190610bc2565b50505091505060006402540be400826106419190610c3d565b90506000670de0b6b3a7640000868361065a9190610d54565b6106649190610ddd565b905080935050505092915050565b8280548282559060005260206000209081019282156106eb579160200282015b828111156106ea5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610692565b5b5090506106f891906106fc565b5090565b5b808211156107155760008160009055506001016106fd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107498261071e565b9050919050565b6107598161073e565b811461076457600080fd5b50565b60008135905061077681610750565b92915050565b60006020828403121561079257610791610719565b5b60006107a084828501610767565b91505092915050565b6000819050919050565b6107bc816107a9565b82525050565b60006020820190506107d760008301846107b3565b92915050565b6107e6816107a9565b81146107f157600080fd5b50565b600081359050610803816107dd565b92915050565b60006020828403121561081f5761081e610719565b5b600061082d848285016107f4565b91505092915050565b61083f8161073e565b82525050565b600060208201905061085a6000830184610836565b92915050565b6000819050919050565b600061088561088061087b8461071e565b610860565b61071e565b9050919050565b60006108978261086a565b9050919050565b60006108a98261088c565b9050919050565b6108b98161089e565b82525050565b60006020820190506108d460008301846108b0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610943826107a9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561097657610975610909565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109cb6000836109b0565b91506109d6826109bb565b600082019050919050565b60006109ec826109be565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a3d600b836109f6565b9150610a4882610a07565b602082019050919050565b60006020820190508181036000830152610a6c81610a30565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610aa9601b836109f6565b9150610ab482610a73565b602082019050919050565b60006020820190508181036000830152610ad881610a9c565b9050919050565b6000610aea826107a9565b9150610af5836107a9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2a57610b29610909565b5b828201905092915050565b600069ffffffffffffffffffff82169050919050565b610b5481610b35565b8114610b5f57600080fd5b50565b600081519050610b7181610b4b565b92915050565b6000819050919050565b610b8a81610b77565b8114610b9557600080fd5b50565b600081519050610ba781610b81565b92915050565b600081519050610bbc816107dd565b92915050565b600080600080600060a08688031215610bde57610bdd610719565b5b6000610bec88828901610b62565b9550506020610bfd88828901610b98565b9450506040610c0e88828901610bad565b9350506060610c1f88828901610bad565b9250506080610c3088828901610b62565b9150509295509295909350565b6000610c4882610b77565b9150610c5383610b77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c9257610c91610909565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ccf57610cce610909565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d0c57610d0b610909565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d4957610d48610909565b5b828202905092915050565b6000610d5f826107a9565b9150610d6a836107a9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da357610da2610909565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610de8826107a9565b9150610df3836107a9565b925082610e0357610e02610dae565b5b82820490509291505056fea2646970667358221220c485730f4b371f0bd5a0ef96c0fb33bda1b8678b8691374d2ff2c2365993741f64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80630343fb251461005a5780633a7b6c74146100975780633ccfd60b146100d4578063893d20e8146100eb5780639e87a5cd14610116578063b60d428814610141575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c919061077c565b61014b565b60405161008e91906107c2565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190610809565b610193565b6040516100cb9190610845565b60405180910390f35b3480156100e057600080fd5b506100e96101db565b005b3480156100f757600080fd5b5061010061041b565b60405161010d9190610845565b60405180910390f35b34801561012257600080fd5b5061012b610443565b60405161013891906108bf565b60405180910390f35b61014961046d565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106101a9576101a86108da565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610260576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561030b57600060018281548110610286576102856108da565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030390610938565b915050610263565b50600067ffffffffffffffff81111561032757610326610981565b5b6040519080825280602002602001820160405280156103555781602001602082028036833780820191505090505b506001908051906020019061036b929190610672565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610392906109e1565b60006040518083038185875af1925050503d80600081146103cf576040519150601f19603f3d011682016040523d82523d6000602084013e6103d4565b606091505b5050905080610418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040f90610a53565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104ac600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a790919063ffffffff16565b10156104ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e490610abf565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053b9190610adf565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f057600080fd5b505afa158015610604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106289190610bc2565b50505091505060006402540be400826106419190610c3d565b90506000670de0b6b3a7640000868361065a9190610d54565b6106649190610ddd565b905080935050505092915050565b8280548282559060005260206000209081019282156106eb579160200282015b828111156106ea5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610692565b5b5090506106f891906106fc565b5090565b5b808211156107155760008160009055506001016106fd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107498261071e565b9050919050565b6107598161073e565b811461076457600080fd5b50565b60008135905061077681610750565b92915050565b60006020828403121561079257610791610719565b5b60006107a084828501610767565b91505092915050565b6000819050919050565b6107bc816107a9565b82525050565b60006020820190506107d760008301846107b3565b92915050565b6107e6816107a9565b81146107f157600080fd5b50565b600081359050610803816107dd565b92915050565b60006020828403121561081f5761081e610719565b5b600061082d848285016107f4565b91505092915050565b61083f8161073e565b82525050565b600060208201905061085a6000830184610836565b92915050565b6000819050919050565b600061088561088061087b8461071e565b610860565b61071e565b9050919050565b60006108978261086a565b9050919050565b60006108a98261088c565b9050919050565b6108b98161089e565b82525050565b60006020820190506108d460008301846108b0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610943826107a9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561097657610975610909565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109cb6000836109b0565b91506109d6826109bb565b600082019050919050565b60006109ec826109be565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a3d600b836109f6565b9150610a4882610a07565b602082019050919050565b60006020820190508181036000830152610a6c81610a30565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610aa9601b836109f6565b9150610ab482610a73565b602082019050919050565b60006020820190508181036000830152610ad881610a9c565b9050919050565b6000610aea826107a9565b9150610af5836107a9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2a57610b29610909565b5b828201905092915050565b600069ffffffffffffffffffff82169050919050565b610b5481610b35565b8114610b5f57600080fd5b50565b600081519050610b7181610b4b565b92915050565b6000819050919050565b610b8a81610b77565b8114610b9557600080fd5b50565b600081519050610ba781610b81565b92915050565b600081519050610bbc816107dd565b92915050565b600080600080600060a08688031215610bde57610bdd610719565b5b6000610bec88828901610b62565b9550506020610bfd88828901610b98565b9450506040610c0e88828901610bad565b9350506060610c1f88828901610bad565b9250506080610c3088828901610b62565b9150509295509295909350565b6000610c4882610b77565b9150610c5383610b77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c9257610c91610909565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ccf57610cce610909565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d0c57610d0b610909565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d4957610d48610909565b5b828202905092915050565b6000610d5f826107a9565b9150610d6a836107a9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da357610da2610909565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610de8826107a9565b9150610df3836107a9565b925082610e0357610e02610dae565b5b82820490509291505056fea2646970667358221220c485730f4b371f0bd5a0ef96c0fb33bda1b8678b8691374d2ff2c2365993741f64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}