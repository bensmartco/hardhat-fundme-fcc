{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdde50cfc35460b134ecdcedc366392556d708038aa1b985af50049093cce36bd",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "953426",
    "logsBloom": "0x
    "blockHash": "0xcf3f3c3d9edd0d0facd906a0a48a6e8f328a6f505366b9b2c1de36672d892930",
    "transactionHash": "0xdde50cfc35460b134ecdcedc366392556d708038aa1b985af50049093cce36bd",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "953426",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7e7bbeb9e775b0554e98c72816c52048",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public  priceFeed;\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        AggregatorV3Interface priceFeedV = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeedV.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0xf2f3c0855892864af355d3db63c741aa70ad91d09b326ec458ea0364d3ee5d20\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    // function getPrice(\\n    //     AggregatorV3Interface priceFeed\\n    // ) internal view returns (uint256) {\\n    //     // Sepolia ETH / USD Address\\n    //     // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n    //     // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //     //     _priceFeed\\n    //     // );\\n    //     (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    //     // ETH/USD rate in 18 digit\\n    //     return uint256(answer * 10000000000);\\n    //     // or (Both will do the same thing)\\n    //     // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    // }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        uint256 ethPrice = uint256(answer * 10000000000);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x1fdea07427b60cb8d620c2c1e6c1ef97d5e259cefc36301d16b6ab0da1b77c18\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010df380380620010df83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b610f73806200016c6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610834565b60405180910390f35b3480156100cf57600080fd5b506100d86103b7565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108b2565b6105f9565b60405161010e9190610834565b60405180910390f35b34801561012357600080fd5b5061012c610611565b6040516101399190610834565b60405180910390f35b34801561014e57600080fd5b5061015761061e565b604051610164919061093e565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c610644565b6040516101999190610968565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109af565b61066a565b6040516101d69190610968565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a990919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a39565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a88565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561037957600080fd5b505afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190610af3565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104e95760006001828154811061046457610463610b20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e190610b4f565b915050610441565b50600067ffffffffffffffff81111561050557610504610b98565b5b6040519080825280602002602001820160405280156105335781602001602082028036833780820191505090505b5060019080519060200190610549929190610774565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057090610bf8565b60006040518083038185875af1925050503d80600081146105ad576040519150601f19603f3d011682016040523d82523d6000602084013e6105b2565b606091505b50509050806105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90610c59565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061067a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f257600080fd5b505afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190610cf1565b50505091505060006402540be400826107439190610d6c565b90506000670de0b6b3a7640000868361075c9190610e83565b6107669190610f0c565b905080935050505092915050565b8280548282559060005260206000209081019282156107ed579160200282015b828111156107ec5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610794565b5b5090506107fa91906107fe565b5090565b5b808211156108175760008160009055506001016107ff565b5090565b6000819050919050565b61082e8161081b565b82525050565b60006020820190506108496000830184610825565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087f82610854565b9050919050565b61088f81610874565b811461089a57600080fd5b50565b6000813590506108ac81610886565b92915050565b6000602082840312156108c8576108c761084f565b5b60006108d68482850161089d565b91505092915050565b6000819050919050565b60006109046108ff6108fa84610854565b6108df565b610854565b9050919050565b6000610916826108e9565b9050919050565b60006109288261090b565b9050919050565b6109388161091d565b82525050565b6000602082019050610953600083018461092f565b92915050565b61096281610874565b82525050565b600060208201905061097d6000830184610959565b92915050565b61098c8161081b565b811461099757600080fd5b50565b6000813590506109a981610983565b92915050565b6000602082840312156109c5576109c461084f565b5b60006109d38482850161099a565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a23601b836109dc565b9150610a2e826109ed565b602082019050919050565b60006020820190508181036000830152610a5281610a16565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a938261081b565b9150610a9e8361081b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ad357610ad2610a59565b5b828201905092915050565b600081519050610aed81610983565b92915050565b600060208284031215610b0957610b0861084f565b5b6000610b1784828501610ade565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b5a8261081b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b8d57610b8c610a59565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610be2600083610bc7565b9150610bed82610bd2565b600082019050919050565b6000610c0382610bd5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c43600b836109dc565b9150610c4e82610c0d565b602082019050919050565b60006020820190508181036000830152610c7281610c36565b9050919050565b600069ffffffffffffffffffff82169050919050565b610c9881610c79565b8114610ca357600080fd5b50565b600081519050610cb581610c8f565b92915050565b6000819050919050565b610cce81610cbb565b8114610cd957600080fd5b50565b600081519050610ceb81610cc5565b92915050565b600080600080600060a08688031215610d0d57610d0c61084f565b5b6000610d1b88828901610ca6565b9550506020610d2c88828901610cdc565b9450506040610d3d88828901610ade565b9350506060610d4e88828901610ade565b9250506080610d5f88828901610ca6565b9150509295509295909350565b6000610d7782610cbb565b9150610d8283610cbb565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dc157610dc0610a59565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dfe57610dfd610a59565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e3b57610e3a610a59565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7857610e77610a59565b5b828202905092915050565b6000610e8e8261081b565b9150610e998361081b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed257610ed1610a59565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f178261081b565b9150610f228361081b565b925082610f3257610f31610edd565b5b82820490509291505056fea2646970667358221220a0cd98217849074a9343ac312ddbfce0e8cb7135c1eba58846c2ea1617f9843764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610834565b60405180910390f35b3480156100cf57600080fd5b506100d86103b7565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108b2565b6105f9565b60405161010e9190610834565b60405180910390f35b34801561012357600080fd5b5061012c610611565b6040516101399190610834565b60405180910390f35b34801561014e57600080fd5b5061015761061e565b604051610164919061093e565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c610644565b6040516101999190610968565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109af565b61066a565b6040516101d69190610968565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a990919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a39565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a88565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561037957600080fd5b505afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190610af3565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104e95760006001828154811061046457610463610b20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e190610b4f565b915050610441565b50600067ffffffffffffffff81111561050557610504610b98565b5b6040519080825280602002602001820160405280156105335781602001602082028036833780820191505090505b5060019080519060200190610549929190610774565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057090610bf8565b60006040518083038185875af1925050503d80600081146105ad576040519150601f19603f3d011682016040523d82523d6000602084013e6105b2565b606091505b50509050806105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90610c59565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061067a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f257600080fd5b505afa158015610706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190610cf1565b50505091505060006402540be400826107439190610d6c565b90506000670de0b6b3a7640000868361075c9190610e83565b6107669190610f0c565b905080935050505092915050565b8280548282559060005260206000209081019282156107ed579160200282015b828111156107ec5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610794565b5b5090506107fa91906107fe565b5090565b5b808211156108175760008160009055506001016107ff565b5090565b6000819050919050565b61082e8161081b565b82525050565b60006020820190506108496000830184610825565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087f82610854565b9050919050565b61088f81610874565b811461089a57600080fd5b50565b6000813590506108ac81610886565b92915050565b6000602082840312156108c8576108c761084f565b5b60006108d68482850161089d565b91505092915050565b6000819050919050565b60006109046108ff6108fa84610854565b6108df565b610854565b9050919050565b6000610916826108e9565b9050919050565b60006109288261090b565b9050919050565b6109388161091d565b82525050565b6000602082019050610953600083018461092f565b92915050565b61096281610874565b82525050565b600060208201905061097d6000830184610959565b92915050565b61098c8161081b565b811461099757600080fd5b50565b6000813590506109a981610983565b92915050565b6000602082840312156109c5576109c461084f565b5b60006109d38482850161099a565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a23601b836109dc565b9150610a2e826109ed565b602082019050919050565b60006020820190508181036000830152610a5281610a16565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a938261081b565b9150610a9e8361081b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ad357610ad2610a59565b5b828201905092915050565b600081519050610aed81610983565b92915050565b600060208284031215610b0957610b0861084f565b5b6000610b1784828501610ade565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b5a8261081b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b8d57610b8c610a59565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610be2600083610bc7565b9150610bed82610bd2565b600082019050919050565b6000610c0382610bd5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c43600b836109dc565b9150610c4e82610c0d565b602082019050919050565b60006020820190508181036000830152610c7281610c36565b9050919050565b600069ffffffffffffffffffff82169050919050565b610c9881610c79565b8114610ca357600080fd5b50565b600081519050610cb581610c8f565b92915050565b6000819050919050565b610cce81610cbb565b8114610cd957600080fd5b50565b600081519050610ceb81610cc5565b92915050565b600080600080600060a08688031215610d0d57610d0c61084f565b5b6000610d1b88828901610ca6565b9550506020610d2c88828901610cdc565b9450506040610d3d88828901610ade565b9350506060610d4e88828901610ade565b9250506080610d5f88828901610ca6565b9150509295509295909350565b6000610d7782610cbb565b9150610d8283610cbb565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dc157610dc0610a59565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dfe57610dfd610a59565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e3b57610e3a610a59565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7857610e77610a59565b5b828202905092915050565b6000610e8e8261081b565b9150610e998361081b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed257610ed1610a59565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f178261081b565b9150610f228361081b565b925082610f3257610f31610edd565b5b82820490509291505056fea2646970667358221220a0cd98217849074a9343ac312ddbfce0e8cb7135c1eba58846c2ea1617f9843764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}